name: Lighthouse CI Performance Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Install Node dependencies
      run: npm ci

    - name: Install Ruby dependencies
      run: bundle install

    - name: Optimize images
      run: npm run optimize-images

    - name: Build Jekyll site
      run: bundle exec jekyll build

    - name: Start Jekyll server
      run: |
        bundle exec jekyll serve --detach --port 4000
        sleep 10
        curl -f http://localhost:4000 || exit 1

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: '.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

    - name: Run custom performance tests
      run: npm run test:performance
      env:
        TEST_URL: http://localhost:4000

    - name: Upload performance test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: _test/results/

    - name: Comment PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          try {
            const reportPath = '_test/results/performance-report.json';
            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              const results = Object.values(report.results);
              const avgScore = results.length > 0 ? 
                Math.round(results.reduce((sum, r) => sum + r.passed.score, 0) / results.length) : 0;
              
              const comment = `## üöÄ Performance Test Results
              
              **Average Score:** ${avgScore}/100
              **Pages Tested:** ${results.length}
              **Passed:** ${results.filter(r => r.passed.overall).length}/${results.length}
              
              ### Core Web Vitals
              | Page | LCP | FCP | CLS | TTFB | Score |
              |------|-----|-----|-----|------|-------|
              ${results.map(r => 
                `| ${r.name} | ${Math.round(r.webVitals.LCP || 0)}ms | ${Math.round(r.webVitals.FCP || 0)}ms | ${(r.webVitals.CLS || 0).toFixed(3)} | ${Math.round(r.webVitals.TTFB || 0)}ms | ${r.passed.score}% |`
              ).join('\n')}
              
              ${avgScore >= 90 ? '‚úÖ' : avgScore >= 50 ? '‚ö†Ô∏è' : '‚ùå'} **Performance Grade:** ${avgScore >= 90 ? 'Excellent' : avgScore >= 50 ? 'Good' : 'Needs Improvement'}
              
              [View detailed report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Could not create performance comment:', error.message);
          }

  audit:
    runs-on: ubuntu-latest
    needs: lighthouse
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download performance results
      uses: actions/download-artifact@v4
      with:
        name: performance-results
        path: _test/results/
        
    - name: Performance budget check
      run: |
        if [ -f "_test/results/performance-report.json" ]; then
          node -e "
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('_test/results/performance-report.json', 'utf8'));
            const results = Object.values(report.results);
            const avgScore = results.reduce((sum, r) => sum + r.passed.score, 0) / results.length;
            
            console.log(\`Average performance score: \${Math.round(avgScore)}%\`);
            
            if (avgScore < 90) {
              console.log('‚ùå Performance budget exceeded. Score must be >= 90%');
              process.exit(1);
            } else {
              console.log('‚úÖ Performance budget met');
            }
          "
        else
          echo "‚ö†Ô∏è Performance report not found, skipping budget check"
        fi